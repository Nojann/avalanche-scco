NOTES TO SETUP

There are three servers :
   - Angular Development Server for frontend. // Not in production
   - Nodemon server for the backend.
   - MongoDB server for database

@ https://appdividend.com/2019/06/04/angular-8-tutorial-with-example-learn-angular-8-crud-from-scratch/

-----------------
## Express Server

- Modules :
+ cors@2.8.5
+ express@4.17.1
+ body-parser@1.19.0
+ mongoose@5.9.12
+ nodemon@2.0.3

- Infos :
We have installed the CORS module because our both angular and node application is running on the different ports.
We have installed the Mongoose module because it provides the ORM for the MongoDB database.

- Run server :
> nodemon server

- Development : 
> system's file watchers limit :
> echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

- Config Ports :
api/DB.js
    URI : mongodb://localhost:27017/gameDb

api/server.js, line 21
    const port = process.env.PORT || 4000;

-----------------
## MONGODB

- Version :
mongodb-org-4.2

- Infos :
By default, MongoDB runs using the mongodb user account. If you change the user that runs the MongoDB process, you must also modify the permission to the data and log directories to give this user access to these directories.

You can optionally ensure that MongoDB will start following a system reboot by issuing the following command:
> sudo systemctl enable mongod

- Bug :
I solved the issue by changing the storage engine to wiredTiger. I did this by editing /etc/mongod.conf and adding "engine: wiredTiger" after "journal: enabled: true"

- Run :
> sudo systemctl start mongod
> sudo systemctl status mongod

### Install
In mongo Shell :

- Create DB : 
> use gameDb

- Create Collection : 
> db.createCollection('Sceneries')
> db.createCollection('UserData')

- Add Sceneries Document :
> db.Sceneries.remove({}) // Important : in front we use the first element.
> var file = cat('avalanche-scco.json');
> var o = JSON.parse(file);
> db.Sceneries.insert(o);

### Get results
In mongo Shell :

- Query :
> db.UserData.find()

- Export (not in mongo shell) :
mongoexport --db=gameDb --collection=UserData --db=gameDb --fieldFile=results.json

-----------------
## Front-end 

- Config Port 

src/app/services/scenery.service.ts, line 25
    uri = 'http://localhost:4000/sceneries';

src/app/services/user-data.service.ts, line 10
    uri = 'http://localhost:4000/userData';

-----------------



